name: Snowflake CLI MLOps Pipeline

on:
  workflow_dispatch:
  push:
    branches:
      - main

jobs:
  snowflake-pipeline:
    runs-on: ubuntu-latest

    # ‚úÖ Use official Snowflake Docker image with SnowSQL pre-installed
    container:
      image: snowflakedb/snowsql:latest

    env:
      SNOWSQL_ACCOUNT: ${{ secrets.SNOWFLAKE_ACCOUNT }}        # e.g. vy23825.central-india.azure
      SNOWSQL_USER: ${{ secrets.SNOWFLAKE_USER }}
      SNOWSQL_PWD: ${{ secrets.SNOWFLAKE_PASSWORD }}
      SNOWSQL_ROLE: ${{ secrets.SNOWFLAKE_ROLE }}
      SNOWSQL_WAREHOUSE: ${{ secrets.SNOWFLAKE_WAREHOUSE }}
      SNOWSQL_DATABASE: ${{ secrets.SNOWFLAKE_DATABASE }}
      SNOWSQL_SCHEMA: ${{ secrets.SNOWFLAKE_SCHEMA }}

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      # ‚úÖ Step 1: Trigger the ML pipeline tasks (01 ‚Üí 04)
      - name: Trigger Snowflake ML Pipeline Tasks
        run: |
          echo "üöÄ Triggering Snowflake ML pipeline..."
          snowsql \
            -a $SNOWSQL_ACCOUNT \
            -u $SNOWSQL_USER \
            -p $SNOWSQL_PWD \
            -r $SNOWSQL_ROLE \
            -w $SNOWSQL_WAREHOUSE \
            -d $SNOWSQL_DATABASE \
            -s $SNOWSQL_SCHEMA \
            -q "
              EXECUTE TASK TASK_1_DATA_INGESTION;
              EXECUTE TASK TASK_2_FEATURE_ENGINEERING;
              EXECUTE TASK TASK_3_MODEL_TRAINING;
              EXECUTE TASK TASK_4_MODEL_EVALUATION;
            "
          echo "‚úÖ ML pipeline triggered successfully."

      # ‚úÖ Step 2: Wait a bit for tasks to complete (optional)
      - name: Pause briefly to allow Snowflake tasks to finish
        run: sleep 60

      # ‚úÖ Step 3: Fetch model and plot files from Snowflake stage
      - name: Fetch Model and Artifacts from Snowflake
        run: |
          mkdir -p downloads
          echo "‚¨áÔ∏è Fetching files from Snowflake..."
          snowsql \
            -a $SNOWSQL_ACCOUNT \
            -u $SNOWSQL_USER \
            -p $SNOWSQL_PWD \
            -r $SNOWSQL_ROLE \
            -w $SNOWSQL_WAREHOUSE \
            -d $SNOWSQL_DATABASE \
            -s $SNOWSQL_SCHEMA \
            -q "
              GET @ML_MODELS_STAGE/power_model.joblib.gz file://downloads/;
              GET @ML_MODELS_STAGE/power_model_*.onnx file://downloads/;
              GET @ML_MODELS_STAGE/prediction_vs_actuals.png file://downloads/;
            "
          echo "‚úÖ Model and plots downloaded successfully."

      # ‚úÖ Step 4: Verify that downloads exist
      - name: Verify Downloaded Files
        run: |
          echo "üìÇ Checking downloaded files..."
          ls -lh downloads/
          if [ ! -f downloads/power_model.joblib.gz ]; then
            echo "‚ùå Model file missing!"
            exit 1
          fi
          echo "‚úÖ Files verified successfully."

      # ‚úÖ Step 5: Upload artifacts back to GitHub
      - name: Upload Model Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: snowflake-ml-artifacts
          path: downloads/
