name: Snowflake ML Pipeline (CLI REST)

on:
  workflow_dispatch:
  push:
    branches:
      - main

jobs:
  snowflake-pipeline:
    runs-on: ubuntu-latest

    env:
      SNOWFLAKE_ACCOUNT: ${{ secrets.SNOWFLAKE_ACCOUNT }}          # e.g. vy23825.central-india.azure
      SNOWFLAKE_USER: ${{ secrets.SNOWFLAKE_USER }}
      SNOWFLAKE_PASSWORD: ${{ secrets.SNOWFLAKE_PASSWORD }}
      SNOWFLAKE_ROLE: ${{ secrets.SNOWFLAKE_ROLE }}
      SNOWFLAKE_WAREHOUSE: ${{ secrets.SNOWFLAKE_WAREHOUSE }}
      SNOWFLAKE_DATABASE: ${{ secrets.SNOWFLAKE_DATABASE }}
      SNOWFLAKE_SCHEMA: ${{ secrets.SNOWFLAKE_SCHEMA }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Trigger Snowflake ML Tasks (via REST API)
        run: |
          echo "Starting Snowflake ML pipeline trigger..."
          
          SNOWFLAKE_HOST="${SNOWFLAKE_ACCOUNT}.snowflakecomputing.com"
          AUTH=$(echo -n "${SNOWFLAKE_USER}:${SNOWFLAKE_PASSWORD}" | base64)

          SQL_QUERY="EXECUTE TASK TASK_1_DATA_INGESTION;
                     EXECUTE TASK TASK_2_FEATURE_ENGINEERING;
                     EXECUTE TASK TASK_3_MODEL_TRAINING;
                     EXECUTE TASK TASK_4_MODEL_EVALUATION;"

          echo "Running Snowflake SQL..."
          curl -s -X POST "https://${SNOWFLAKE_HOST}/api/v2/statements" \
            -H "Authorization: Basic ${AUTH}" \
            -H "Content-Type: application/json" \
            -H "Accept: application/json" \
            -d "{
                  \"statement\": \"${SQL_QUERY}\",
                  \"warehouse\": \"${SNOWFLAKE_WAREHOUSE}\",
                  \"database\": \"${SNOWFLAKE_DATABASE}\",
                  \"schema\": \"${SNOWFLAKE_SCHEMA}\",
                  \"role\": \"${SNOWFLAKE_ROLE}\"
                }" | jq '.'

          echo "Snowflake tasks triggered successfully."

      - name: Wait for pipeline to complete
        run: |
          echo "Waiting 60 seconds for Snowflake tasks to complete..."
          sleep 60

      - name: Fetch Model Files from Snowflake Stage
        run: |
          echo "Downloading model artifacts from Snowflake stage..."
          SNOWFLAKE_HOST="${SNOWFLAKE_ACCOUNT}.snowflakecomputing.com"
          AUTH=$(echo -n "${SNOWFLAKE_USER}:${SNOWFLAKE_PASSWORD}" | base64)

          mkdir -p downloads

          # Fetch model file (joblib)
          curl -u "${SNOWFLAKE_USER}:${SNOWFLAKE_PASSWORD}" \
            "https://${SNOWFLAKE_HOST}/session/v1/login-request?warehouse=${SNOWFLAKE_WAREHOUSE}&database=${SNOWFLAKE_DATABASE}&schema=${SNOWFLAKE_SCHEMA}&roleName=${SNOWFLAKE_ROLE}" > /dev/null 2>&1

          # Replace with your actual Snowflake stage GET command if exposed via presigned URL
          echo "Note: For actual model file download, configure a presigned URL stage or Snowflake external function."
          echo "Files expected: power_model.joblib.gz, prediction_vs_actuals.png"

      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: snowflake-ml-artifacts
          path: downloads/
